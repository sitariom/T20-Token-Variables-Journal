// Esta macro cria um journal com todas as variáveis de um personagem e de rolagem atreladas a um token. Basta selecionar um token, executar a macro e o journal será criado.
// SELECIONE UM TOKEN

// Função para achatar o objeto
function flattenObject(obj, prefix = '', res = {}) {
  for (let [key, value] of Object.entries(obj)) {
    const newKey = prefix ? `${prefix}.${key}` : key;
    if (typeof value === 'object' && value !== null) {
      flattenObject(value, newKey, res);
    } else {
      res[newKey] = value;
    }
  }
  return res;
}

if (!token) {
  ui.notifications.warn("Por favor, selecione um token.");
  return;
}

const actor = token.actor;
if (!actor) {
  ui.notifications.warn("Token selecionado não possui um ator associado.");
  return;
}

const char = flattenObject(actor.system);
let charHtml = '<table>';
for (let [key, value] of Object.entries(char)) {
  charHtml += `<tr><td>${key}</td><td>${value}</td></tr>`;
}
charHtml += '</table>';

const rollData = flattenObject(actor.getRollData());
let rollDataHtml = '<table>';
for (let [key, value] of Object.entries(rollData)) {
  rollDataHtml += `<tr><td>@${key}</td><td>${value}</td></tr>`;
}
rollDataHtml += '</table>';

// Obtém o nome do token
const tokenName = token.name || "Desconhecido";

let jrnl = await JournalEntry.create({
  name: `T20_Variaveis_${tokenName}`,
  pages: [
    {name: "Vars. de Personagem", type: "text", text: {content: charHtml}},
    {name: "Vars. de Rolagem", type: "text", text: {content: rollDataHtml}}
  ]
}, {renderSheet: true});
